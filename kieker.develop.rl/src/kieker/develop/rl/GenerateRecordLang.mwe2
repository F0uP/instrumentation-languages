module kieker.develop.rl.GenerateRecordLang

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "kieker.develop.rl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
//			uriMap = {
//    		from = "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.genmodel"
//    		to = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
//    	}
//    	
//    	uriMap = {
//    		from = "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore"
//    		to = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.ecore"
//    	}
//    	
//    	registerGenModelFile = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
//    	registerEcoreFile = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.ecore"
		}
		language = StandardLanguage {
			name = "kieker.develop.rl.RecordLang"
			fileExtensions = "irl"
			
			fragment = types.TypesGeneratorFragment2 auto-inject {}
			
			referencedResource = "platform:/resource/kieker.develop.semantics/model/SemanticAnnotation.genmodel"
			
			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
