/**
 * generated by Xtext
 */
package kieker.develop.al.ui.labeling;

import com.google.inject.Inject;
import kieker.develop.al.aspectLang.Aspect;
import kieker.develop.al.aspectLang.Collector;
import kieker.develop.al.aspectLang.ContainerNode;
import kieker.develop.al.aspectLang.LocationQuery;
import kieker.develop.al.aspectLang.Pointcut;
import kieker.develop.al.aspectLang.SubPathNode;
import kieker.develop.al.aspectLang.WildcardNode;
import kieker.develop.al.mapping.Feature;
import kieker.develop.al.mapping.NamedElement;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
@SuppressWarnings("all")
public class AspectLangLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public AspectLangLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final Aspect e) {
    return "aspect";
  }
  
  public CharSequence text(final ContainerNode e) {
    CharSequence _xifexpression = null;
    Feature _container = e.getContainer();
    if ((_container instanceof NamedElement)) {
      Feature _container_1 = e.getContainer();
      _xifexpression = ((NamedElement) _container_1).getName();
    } else {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("Container is of type ");
      Feature _container_2 = e.getContainer();
      Class<? extends Feature> _class = _container_2.getClass();
      String _name = _class.getName();
      _builder.append(_name, "");
      _xifexpression = _builder;
    }
    return _xifexpression;
  }
  
  public String text(final WildcardNode e) {
    return "*";
  }
  
  public String text(final SubPathNode e) {
    return "**";
  }
  
  public String text(final Pointcut e) {
    String _name = e.getName();
    return ("pointcut" + _name);
  }
  
  public String text(final LocationQuery e) {
    return "path";
  }
  
  public Object text(final Collector e) {
    return null;
  }
}
